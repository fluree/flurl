name: build & release
on:
  push:
    branches:
      - main
# in case we just want to build version tags someday
#    tags:
#      - v*
jobs:
  create-release:
    name: create release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create-release.outputs.upload_url }}
    steps:
      - name: create release
        id: create-release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: latest
          release_name: Latest main branch build
          body: |
            ## Installation
            1. Download the file for your OS
            1. Rename it to `flurl`
            1. Put in your PATH somewhere
            1. Make it executable: `chmod +x flurl`
            1. On macOS: Run `xattr -d com.apple.quarantine flurl`

            Note that these are all amd64 binaries for now. Once GraalVM
            supports macOS on Apple silicon and GitHub Actions supports it too,
            we'll add a build for that. Building Linux arm64 binaries can
            happen once GitHub's action runners support it (GraalVM already
            does).
          draft: false
          prerelease: false
  build:
    runs-on: ${{ matrix.os }}
    needs: create-release
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Java
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Setup Clojure
        uses: DeLaGuardo/setup-clojure@3.5
        with:
          cli: 1.10.3.1020
      - name: Setup GraalVM
        uses: DeLaGuardo/setup-graalvm@5.0
        with:
          graalvm: 21.3.0
          java: java11
      - name: Setup native-image
        run: gu install native-image
      - name: Build binary
        run: make
      - name: upload release asset
        if: success()
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: flurl
          asset_name: flurl-${{ startsWith(matrix.os, 'macos') && 'macos' || 'linux' }}
          asset_content_type: application/octet-stream
